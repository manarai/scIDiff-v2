[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "scidiff"
version = "0.1.0"
description = "Single-cell Inverse Diffusion for gene expression modeling and design"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "scIDiff Team", email = "contact@scidiff.org"}
]
maintainers = [
    {name = "scIDiff Team", email = "contact@scidiff.org"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "single-cell",
    "genomics", 
    "diffusion-models",
    "generative-ai",
    "perturbation-prediction",
    "inverse-design",
    "bioinformatics",
    "machine-learning"
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "h5py>=3.1.0",
    "scanpy>=1.8.0",
    "anndata>=0.8.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "tqdm>=4.62.0",
    "pyyaml>=6.0",
    "omegaconf>=2.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "pre-commit>=2.15.0",
    "mypy>=0.950"
]
notebooks = [
    "jupyter>=1.0.0",
    "ipywidgets>=7.6.0",
    "plotly>=5.0.0"
]
visualization = [
    "plotly>=5.0.0",
    "umap-learn>=0.5.0",
    "fa2>=0.3.5"
]
training = [
    "wandb>=0.12.0",
    "tensorboard>=2.8.0"
]
all = [
    "scidiff[dev,notebooks,visualization,training]"
]

[project.urls]
Homepage = "https://github.com/your-username/scIDiff"
Documentation = "https://scidiff.readthedocs.io/"
Repository = "https://github.com/your-username/scIDiff.git"
"Bug Reports" = "https://github.com/your-username/scIDiff/issues"
Changelog = "https://github.com/your-username/scIDiff/blob/main/CHANGELOG.md"

[project.scripts]
scidiff-train = "scIDiff.cli.train:main"
scidiff-sample = "scIDiff.cli.sample:main"
scidiff-design = "scIDiff.cli.design:main"

[tool.setuptools.packages.find]
include = ["scIDiff*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
scIDiff = [
    "configs/*.yaml",
    "data/example_datasets/*"
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["scIDiff"]
known_third_party = ["torch", "numpy", "pandas", "matplotlib", "seaborn", "scanpy"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scanpy.*",
    "anndata.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "umap.*",
    "fa2.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU"
]

[tool.coverage.run]
source = ["scIDiff"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

